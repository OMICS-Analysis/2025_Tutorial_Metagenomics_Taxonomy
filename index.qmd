---
title: "Perfil Taxonómico de metagenomas usando Kraken"
author: "OMICs Analysis"
format: 
  html:
    toc: true
    toc-depth: 3
    theme: yeti
    toc-location: left-body
    smooth-scroll: true
    toc-title: "Contenido"
editor: visual
execute:
  engine: knitr
lang: es
---

![](images/logo_OAN_for_white.png){fig-align="center" width="300"}

# Introducción

Vamos a utilizar `Kraken v2`, lo puedes descragar [aquí](https://ccb.jhu.edu/software/kraken/MANUAL.html).

Este tutorial se hizo utilizando un equipo A`SUSTeK COMPUTER INC. G75VW` con procesador `Intel® Core™ i7-3610QM CPU @ 2.30GHz × 8`, `24 GB` de `RAM`.

Advertencia ⚠️. Según tus capacidades computacionales puedes utilizar bases de datos más grandes para clasificar, **entre mayor tamaño mayor cantidad de memoría `RAM` necesitarás**. Aquí te dejo algunas disponibles, puedes ver más a detalle de su indexación y la gran variedad de bases de datos que ya existen [aquí](https://benlangmead.github.io/aws-indexes/k2):

```{=html}
<table>
  <thead>
    <tr>
      <th>Colección</th>
      <th>Contenido</th>
      <th>Fecha</th>
      <th style="text-align: right">Tamaño de archivo (GB)</th>
      <th style="text-align: right">Tamaño Index (GB)</th>
      <th>HTTPS URL</th>
      <th>Inspeccionar</th>
      <th>Librería</th>
      <th>MD5</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>Viral</td>
      <td>Refseq viral</td>
      <td>7/14/2025</td>
      <td style="text-align: right">0.5</td>
      <td style="text-align: right">0.6</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_viral_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/viral_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/viral_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/viral_20250714/viral.md5">.md5</a></td>
    </tr>
    <tr>
      <td>MinusB</td>
      <td>Refseq archaea, viral, plasmid, human<sup>1</sup>, UniVec_Core</td>
      <td>7/14/2025</td>
      <td style="text-align: right">7.7</td>
      <td style="text-align: right">10.8</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_minusb_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/minusb_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/minusb_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/minusb_20250714/minusb.md5">.md5</a></td>
    </tr>
    <tr>
      <td>Standard</td>
      <td>Refseq archaea, bacteria, viral, plasmid, human<sup>1</sup>, UniVec_Core</td>
      <td>7/14/2025</td>
      <td style="text-align: right">70.8</td>
      <td style="text-align: right">91.8</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_standard_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_20250714/standard.md5">.md5</a></td>
    </tr>
    <tr>
      <td>Standard-8</td>
      <td>Standard with DB capped at 8 GB</td>
      <td>7/14/2025</td>
      <td style="text-align: right">5.5</td>
      <td style="text-align: right">7.5</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_standard_08_GB_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_08_GB_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_08_GB_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_08_GB_20250714/standard_08_GB.md5">.md5</a></td>
    </tr>
    <tr>
      <td>Standard-16</td>
      <td>Standard with DB capped at 16 GB</td>
      <td>7/14/2025</td>
      <td style="text-align: right">11.2</td>
      <td style="text-align: right">14.9</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_standard_16_GB_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_16_GB_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_16_GB_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/standard_16_GB_20250714/standard_16_GB.md5">.md5</a></td>
    </tr>
    <tr>
      <td>PlusPF</td>
      <td>Standard plus Refseq protozoa &amp; fungi</td>
      <td>7/14/2025</td>
      <td style="text-align: right">75.9</td>
      <td style="text-align: right">98.4</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_pluspf_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_20250714/pluspf.md5">.md5</a></td>
    </tr>
    <tr>
      <td>PlusPF-8</td>
      <td>PlusPF with DB capped at 8 GB</td>
      <td>7/14/2025</td>
      <td style="text-align: right">5.5</td>
      <td style="text-align: right">7.5</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_pluspf_08_GB_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_08_GB_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_08_GB_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_08_GB_20250714/pluspf_08_GB.md5">.md5</a></td>
    </tr>
    <tr>
      <td>PlusPF-16</td>
      <td>PlusPF with DB capped at 16 GB</td>
      <td>7/14/2025</td>
      <td style="text-align: right">11.2</td>
      <td style="text-align: right">14.9</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_pluspf_16_GB_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_16_GB_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_16_GB_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspf_16_GB_20250714/pluspf_16_GB.md5">.md5</a></td>
    </tr>
    <tr>
      <td>PlusPFP</td>
      <td>Standard plus Refseq protozoa, fungi &amp; plant</td>
      <td>7/14/2025</td>
      <td style="text-align: right">155.7</td>
      <td style="text-align: right">210.6</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_pluspfp_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_20250714/pluspfp.md5">.md5</a></td>
    </tr>
    <tr>
      <td>PlusPFP-8</td>
      <td>PlusPFP with DB capped at 8 GB</td>
      <td>7/14/2025</td>
      <td style="text-align: right">5.2</td>
      <td style="text-align: right">7.5</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_pluspfp_08_GB_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_08_GB_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_08_GB_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_08_GB_20250714/pluspfp_08_GB.md5">.md5</a></td>
    </tr>
    <tr>
      <td>PlusPFP-16</td>
      <td>PlusPFP with DB capped at 16 GB</td>
      <td>7/14/2025</td>
      <td style="text-align: right">10.5</td>
      <td style="text-align: right">14.9</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_pluspfp_16_GB_20250714.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_16_GB_20250714/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_16_GB_20250714/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/pluspfp_16_GB_20250714/pluspfp_16_GB.md5">.md5</a></td>
    </tr>
    <tr>
      <td>EuPathDB46<sup>2</sup></td>
      <td>Eukaryotic pathogen genomes with contaminants removed</td>
      <td>4/18/2023</td>
      <td style="text-align: right">8.4</td>
      <td style="text-align: right">11</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_eupathdb48_20230407.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_eupathdb48_20230407/kraken2inspect_output.txt">.txt</a></td>
      <td>N/A</td>
      <td>N/A</td>
    </tr>
    <tr>
      <td>core_nt Database</td>
      <td>Very large collection, inclusive of GenBank, RefSeq, TPA and PDB</td>
      <td>6/9/2025</td>
      <td style="text-align: right">183.0</td>
      <td style="text-align: right">238.2</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_core_nt_20250609.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/core_nt_20250609/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/core_nt_20250609/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/core_nt_20250609/core_nt.md5">.md5</a></td>
    </tr>
    <tr>
      <td>GTDB v226 (<code class="language-plaintext highlighter-rouge">genomic_files_reps</code>)</td>
      <td>Bacterial and archaeal</td>
      <td>6/9/2025</td>
      <td style="text-align: right">500.9</td>
      <td style="text-align: right">644.0</td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/k2_gtdb_genome_reps_20250609.tar.gz">.tar.gz</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/gtdb_genome_reps_20250609/inspect.txt">.txt</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/gtdb_genome_reps_20250609/library_report.tsv">.tsv</a></td>
      <td><a href="https://genome-idx.s3.amazonaws.com/kraken/gtdb_genome_reps_20250609/gtdb_genome_reps.md5">.md5</a></td>
    </tr>
  </tbody>
</table>
```

Para este tutorial vamos a trabajar con la base de datos indexada `MinusB` (enfocada en bacterias y arqueas, más ligera) y `Standard-16` (más completa, incluyendo eucariotas, pero requiere más memoria). Como datos de metagenoma vamos a utilizar los que previamente habiamos trimeado y filtrado de contaminación de hospedero.

| SRA ID | Condición | Etapa de crecimiento |
|------------------------|------------------------|------------------------|
| [SRR19746212](https://trace.ncbi.nlm.nih.gov/Traces/sra?run=SRR19746212) | Periodo Normal | Novillas en crecimiento |
| [SRR19746215](https://trace.ncbi.nlm.nih.gov/Traces/sra?run=SRR19746215) | Estrés Térmico | Novillas en crecimiento |
| [SRR19746202](https://trace.ncbi.nlm.nih.gov/Traces/sra?run=SRR19746202) | Periodo Normal | Novillas |
| [SRR19746205](https://trace.ncbi.nlm.nih.gov/Traces/sra?run=SRR19746205) | Estrés Térmico | Novillas |
| [SRR19746208](https://trace.ncbi.nlm.nih.gov/Traces/sra?run=SRR19746208) | Periodo Normal | Vacas Lactantes |
| [SRR19746219](https://trace.ncbi.nlm.nih.gov/Traces/sra?run=SRR19746219) | Estrés Térmico | Vacas Lactantes |

## Preparación de base de datos indexada

Para este proceso vamos a generar un directorio llamado `2025_metagenomics_profile`

```{bash, eval=FALSE}
mkdir 2025_metagenomics_profile
cd 2025_metagenomics_profile
mkdir dbs
cd dbs
```

```{bash, eval=FALSE}
mkdir db_minusb
cd db_minusb
wget https://genome-idx.s3.amazonaws.com/kraken/k2_minusb_20250714.tar.gz
tar -xzf k2_minusb_20250714.tar.gz
```

```{bash, eval=FALSE}
cd ..
mkdir db_standard
cd db_standard
wget https://genome-idx.s3.amazonaws.com/kraken/k2_standard_16_GB_20250714.tar.gz
tar -xzf k2_standard_16_GB_20250714.tar.gz
```

# Kraken2

`Kraken2` es una herramienta bioinformática rápida y precisa para clasificar secuencias de ADN de muestras metagenómicas (como las de microbiomas) en categorías taxonómicas, como bacterias, virus, arqueas o eucariotas. Es ampliamente usada en estudios de microbiología y ecología para identificar "quién está ahí" en una mezcla de organismos.

**Cómo funciona de manera simple**:

-   **Construcción de la base de datos**: Kraken2 crea un índice (database) a partir de genomas de referencia (como los que descargaste: minusb para bacterias y arqueas, o standard para una cobertura más amplia). Divide los genomas en "k-mers" (subsecuencias cortas de longitud fija, por ejemplo, 31 bases). Cada k-mer se asocia al ancestro común más bajo (LCA, por sus siglas en inglés) de los taxones que lo comparten, para manejar ambigüedades.

-   **Clasificación de reads**: Para tus archivos FASTQ (secuencias de lecturas), Kraken2 divide cada read en k-mers y los busca en la base de datos. Cuenta los "hits" (coincidencias) para diferentes taxones y asigna el read al taxón con el mejor puntaje (basado en la raíz del árbol taxonómico). Si no hay coincidencias, el read se marca como "no clasificado".

-   **Ventajas**: Es muy rápido (usa hashing para búsquedas eficientes) y maneja datos paired-end como los tuyos. Puedes ajustar parámetros como la confianza (--confidence) para mayor precisión.

-   **Limitaciones**: Depende de la calidad de la base de datos; si un organismo no está en ella, no se detectará.

Para este punto es conveniente tener las secuencias pareadas en un solo archivo concatenado FASTQ. En caso de que tengas tus archivos en dos archivos separados `fwd` y `rev`, puedes preprocesarlos usando `kraken --paired`.

Explicación breve de opciones usadas:

-   `--paired` : entrada paired-end.

-   `--gzip-compressed` : tus fastq están gz.

-   `--use-names` : muestra nombres taxonómicos legibles en el output.

-   `--report` : resumen por taxón (ideal para downstream).

-   `--output` : asignaciones por lectura (format columnas).

-   `--classified-out` / `--unclassified-out` : opcional, guarda reads clasificados/no clasificados (usar `#` para pares).

-   `--confidence` : opcional, umbral de confianza (ejemplo `0.1` si quieres mayor especificidad).

## MinusB

```{bash, eval=FALSE}
"./bin/kraken2/kraken2" \
  --db "dbs/db_minusb"\
  --paired \
  --gzip-compressed \
  --threads 7 \
  --use-names \
  --report "kraken2_report_k2_minusb_20250714.txt" \
  --output "kraken2_output_k2_minusb_20250714.tsv" \
  --classified-out "kraken2_classified_k2_minusb_20250714_#.fq" \
  --unclassified-out "kraken2_unclassified_k2_minusb_20250714_#.fq" \
  "1_QC/host_filter/SRR19746202_1.fastq.gz" "1_QC/host_filter/SRR19746202_2.fastq.gz"

```

Resultado:

```{bash, eval=FALSE}
32842930 sequences (9852.88 Mbp) processed in 751.006s (2623.9 Kseq/m, 787.17 Mbp/m).
  3196540 sequences classified (9.73%)
  29646390 sequences unclassified (90.27%)

```

## Standard 16GB

```{bash, eval=FALSE}
"./bin/kraken2/kraken2" \
  --db "dbs/db_standard"\
  --paired \
  --gzip-compressed \
  --threads 7 \
  --use-names \
  --report "kraken2_report_k2_standard_20250714.txt" \
  --output "kraken2_output_k2_standard_20250714.tsv" \
  --classified-out "kraken2_classified_k2_standard_20250714_#.fq" \
  --unclassified-out "kraken2_unclassified_k2_standard_20250714_#.fq" \
  "1_QC/host_filter/SRR19746202_1.fastq.gz" "1_QC/host_filter/SRR19746202_2.fastq.gz"
```

Resultado:

```{bash, eval=FALSE}
32842930 sequences (9852.88 Mbp) processed in 581.113s (3391.0 Kseq/m, 1017.31 Mbp/m).
  9536390 sequences classified (29.04%)
  23306540 sequences unclassified (70.96%)
```

Escoger la base de datos adecuada influye drasticamente en la clasificación de las lecturas.

## Output Kraken2

`Kraken2` nos arroja como `output` los siguientes archivos:

Cuando corres los comandos que te pasé, obtienes **cuatro tipos principales de archivos por base de datos**:

### `kraken2_output_*.tsv`

-   Contiene una línea **por cada lectura**.

    Columnas típicas:

    1.  C/U → si fue clasificada (C) o no (U).

    2.  Read ID.

    3.  TaxID asignado.

    4.  Longitud de la secuencia.

    5.  K-mers clasificados / asignaciones.

-   Útil si quieres rastrear lecturas individuales, pero **no es práctico para gráficos de composición**.

### `kraken2_report_*.txt`

-   Es el archivo **más importante para resúmenes**.

    Contiene la composición taxonómica del metagenoma en forma de tabla jerárquica.

    Columnas típicas:

    1.  **% de lecturas** asignadas a ese taxón (incluyendo descendientes).

    2.  lecturas asignadas directamente a ese taxón.

    3.  lecturas totales (taxón + descendientes).

    4.  TaxID.

    5.  Nivel taxonómico (U = root, D = dominio, P = filo, C = clase, O = orden, F = familia, G = género, S = especie, etc.).

    6.  Nombre del taxón.

-   Este archivo **sirve como entrada ideal** para hacer gráficos de barras apiladas (ejemplo: abundancias relativas por filo o por género).

-   Si después usas **Bracken**, este mismo archivo puede refinarse para obtener abundancias corregidas.

### `kraken2_classified_*.fq`

-   Contiene las lecturas que **sí fueron clasificadas** por Kraken2, separadas en pares (`_1.fq` y `_2.fq`).

Útil si quieres analizar solo la fracción clasificada (ej. ensamblaje por taxón específico).

### `kraken2_unclassified_*.fq`

-   Contiene las lecturas que **no pudieron clasificarse** (no coincidieron con la base de datos).

-   Útil si quieres estudiar la “parte desconocida” del metagenoma o reanalizar con otra base de datos.

## Visualización del Perfil Taxonómico

En `R`:

```{r, message=FALSE, warning=FALSE}
#| code-fold: true
#| code-summary: "Código para barras apiladas"

# Instalar paquetes si no los tienes
# install.packages(c("tidyverse"))

library(tidyverse)

#Lista tus archivos Kraken2 report
# Ajusta la ruta donde guardaste los reportes
report_files <- list.files(
  path = "reports",
  pattern = "kraken2_report_.*\\.txt$",
  full.names = TRUE
)


# Función para leer un reporte y extraer nivel taxonómico deseado
read_kraken_report <- function(file, rank = "P") {
  # rank: D=Domain, P=Phylum, C=Class, O=Order, F=Family, G=Genus, S=Species
  df <- read.table(file, sep = "\t", header = FALSE, quote = "", comment.char = "", fill = TRUE)
  
  colnames(df) <- c("percent", "reads_clade", "reads_direct", "rank_code", "ncbi_taxid", "name")
  
  df$name <- trimws(df$name)
  
  df <- df %>% filter(rank_code == rank)
  
  # Agregar columna con nombre de la muestra (a partir del archivo)
  sample_id <- basename(file) %>% str_remove("^kraken2_report_") %>% str_remove("\\.txt$")
  df$sample <- sample_id
  
  return(df)
}

# Leer todos los reportes
all_reports <- map_dfr(report_files, read_kraken_report, rank = "P")  # "P" = Phylum


# Normalizar datos para gráfico
# Tomamos % directamente de Kraken2 (ya está normalizado)
plot_data <- all_reports %>%
  select(sample, name, percent)

plot_data <- plot_data %>% 
  filter(percent > 0)


# Graficar barras apiladas

ggplot(plot_data, aes(x = sample, y = percent, fill = name)) +
  geom_bar(stat = "identity") +
  labs(
    title = "Perfil taxonómico (Kraken2)",
    x = "Muestra",
    y = "Abundancia relativa (%)",
    fill = "Phylum"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1),
    panel.grid = element_blank()
  )

```

```{bash, eval=FALSE}
#| code-fold: true
#| code-summary: "RUN_kraken.sh"
#!/usr/bin/env bash
set -euo pipefail

# -----------------------
# Config (ajusta THREADS si quieres)
# -----------------------
THREADS=8

# Rutas (usé las que me diste)
FASTQ_DIR="/media/erick/Backup Plus/2025_metagenomics_direct/1_QC/host_filter"
KRAKEN="/media/erick/Backup Plus/2025_metagenomics_direct/bin/kraken2/kraken2"
TAR_DB="/media/erick/Backup Plus/2025_metagenomics_direct/k2_standard_16_GB_20250714.tar.gz"
DB_PARENT="/media/erick/Backup Plus/2025_metagenomics_direct/dbs"
DB_DIR="$DB_PARENT/db_minusb"   # ruta esperada después de extraer la tar.gz
OUT_DIR="/media/erick/Backup Plus/2025_metagenomics_direct/kraken2_k2_standard_16GB_20250714"

# Opcionales
USE_NAMES="--use-names"
GZIP_COMP="--gzip-compressed"
CONFIDENCE=""   # ejemplo: "--confidence 0.1" si quieres umbral
# -----------------------

# Comprobaciones básicas
if [[ ! -x "$KRAKEN" ]]; then
  echo "ERROR: no encontré el ejecutable Kraken2 en:"
  echo "  $KRAKEN"
  echo "Verifica la ruta o hazlo ejecutable con chmod +x."
  exit 1
fi

# Si la DB no está extraída, intenta extraerla (si existe el tarball)
if [[ ! -d "$DB_DIR" ]]; then
  if [[ -f "$TAR_DB" ]]; then
    echo "La DB no está extraída. Extrayendo $TAR_DB -> $DB_PARENT ..."
    mkdir -p "$DB_PARENT"
    tar -xzf "$TAR_DB" -C "$DB_PARENT"
    echo "Extracción completada. DB esperada en: $DB_DIR"
    if [[ ! -d "$DB_DIR" ]]; then
      echo "ATENCIÓN: Después de extraer, no encontré la carpeta $DB_DIR."
      echo "Lista el contenido de $DB_PARENT para verificar el nombre exacto."
      ls -l "$DB_PARENT"
      exit 1
    fi
  else
    echo "ERROR: la DB no está en $DB_DIR y no hay tarball en $TAR_DB"
    exit 1
  fi
fi

mkdir -p "$OUT_DIR"

# Loop sobre todos los pares *_1.fastq.gz
shopt -s nullglob
for R1 in "$FASTQ_DIR"/*_1.fastq.gz; do
  R2="${R1%_1.fastq.gz}_2.fastq.gz"
  SAMPLE=$(basename "$R1" "_1.fastq.gz")
  SAMPLE_OUT="$OUT_DIR/$SAMPLE"
  mkdir -p "$SAMPLE_OUT"

  if [[ ! -f "$R2" ]]; then
    echo "SKIP: no existe R2 para $SAMPLE:"
    echo "  R1=$R1"
    echo "  R2=$R2"
    continue
  fi

  echo "=== Ejecutando Kraken2 para muestra: $SAMPLE ==="
  echo "R1: $R1"
  echo "R2: $R2"
  echo "Salida: $SAMPLE_OUT"

  "$KRAKEN" \
    --db "$DB_DIR" \
    --paired \
    $GZIP_COMP \
    --threads "$THREADS" \
    $USE_NAMES \
    $CONFIDENCE \
    --report "$SAMPLE_OUT/${SAMPLE}.report" \
    --output "$SAMPLE_OUT/${SAMPLE}.kraken" \
    "$R1" "$R2" \
    2>&1 | tee "$SAMPLE_OUT/${SAMPLE}_kraken.log"

  echo ">>> Terminado $SAMPLE"
  echo
done

echo "Procesamiento completado. Reportes en: $OUT_DIR"

```

# Bracken

`Bracken` (*Bayesian Reestimation of Abundance with Kraken*), lo puedes descargar de [aquí](https://github.com/jenniferlu717/Bracken), toma los reportes de `Kraken2` y redistribuye las asignaciones de reads, especialmente los ambiguos, para dar estimaciones más precisas de abundancia relativa. `Kraken2` asigna reads a taxones basándose en k-meros, pero no ajusta por diferencias en el tamaño de genomas o sesgos de cobertura. `Bracken` corrige esto, lo que es ideal para gráficos de barras apiladas o análisis cuantitativos.

`Bracken` no usa los archivos FASTQ (SRR19746202_1.fastq.gz y SRR19746202_2.fastq.gz). En cambio, trabaja con los archivos de salida de `Kraken2`: los archivos `.report.txt` (clasificaciones por read) y/o .report.txt (reporte taxonómico).

Bracken necesita acceder a la misma base de datos que usaste en `Kraken2` (`db_minusb` o `db_standard`) porque consulta los índices para ajustar abundancias.

```{bash, eval=FALSE}
python bin/Bracken/src/est_abundance.py \
-i kraken2_report_k2_minusb_SRR19746205.txt \
-k dbs/db_minusb/database75mers.kmer_distrib \
-l S \
-o bracken_SRR19746205.txt  
-l S \
-t 10
```

**Explicación de los parámetros**:

-   `-d`: Directorio de la base de datos de Kraken2.

-   `-i`: Archivo .report.txt de Kraken2 como entrada.

-   `-o`: Archivo de salida con el reporte ajustado de Bracken.

-   `-l`: Nivel taxonómico (S para especie, G para género, etc.). Usa S aquí, pero cámbialo a G si prefieres género para el gráfico.

-   `-t`: Umbral mínimo de reads (10 es un valor conservador).
